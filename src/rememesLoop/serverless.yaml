service: rememesLoop

package:
  artifact: dist/index.zip

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1028
  timeout: 900

functions:
  rememesS3Loop:
    handler: index.handler
    name: rememesS3Loop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(6 hours)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_S3: true
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: "rememesS3Loop_${opt:stage, self:provider.stage}"
  rememesRefreshMetadataLoop:
    handler: index.handler
    name: rememesRefreshMetadataLoop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: cron(1 2 * * ? *)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_LOAD_FILE: false
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: "rememesRefreshMetadataLoop_${opt:stage, self:provider.stage}"
  rememesFileLoop:
    handler: index.handler
    name: rememesFileLoop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_LOAD_FILE: true
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: "rememesFileLoop_${opt:stage, self:provider.stage}"