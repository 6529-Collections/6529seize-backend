service: rememesLoop

package:
  artifact: dist/index.zip

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 2000
  timeout: 900
  architecture: arm64
  logRetentionInDays: 60

functions:
  rememesS3Loop:
    handler: index.handler
    name: rememesS3Loop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(6 hours)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_S3: true
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'rememesS3Loop_${opt:stage, self:provider.stage}'
  rememesRefreshMetadataLoop:
    handler: index.handler
    name: rememesRefreshMetadataLoop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: cron(1 2 * * ? *)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_LOAD_FILE: false
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'rememesRefreshMetadataLoop_${opt:stage, self:provider.stage}'
  rememesFileLoop:
    handler: index.handler
    name: rememesFileLoop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      REMEMES_LOAD_FILE: true
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'rememesFileLoop_${opt:stage, self:provider.stage}'

resources:
  Resources:
    RememesS3LoopOOMFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: /aws/lambda/rememesS3Loop
        FilterPattern: "Runtime.OutOfMemory"
        MetricTransformations:
          - MetricNamespace: "Lambda/OOM"
            MetricName: "rememesS3Loop_OOMErrorCount"
            MetricValue: "1"
            DefaultValue: 0

    RememesS3LoopOOMAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: RememesS3LoopOOMFilter
      Properties:
        AlarmName: !Sub "${AWS::StackName}-rememesS3Loop-OOM"
        AlarmDescription: !Sub "Lambda rememesS3Loop OutOfMemory in ${AWS::Region}"
        Namespace: "Lambda/OOM"
        MetricName: "rememesS3Loop_OOMErrorCount"
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        TreatMissingData: notBreaching
        AlarmActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}
        OKActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}

    RememesRefreshMetadataLoopOOMFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: /aws/lambda/rememesRefreshMetadataLoop
        FilterPattern: "Runtime.OutOfMemory"
        MetricTransformations:
          - MetricNamespace: "Lambda/OOM"
            MetricName: "rememesRefreshMetadataLoop_OOMErrorCount"
            MetricValue: "1"
            DefaultValue: 0

    RememesRefreshMetadataLoopOOMAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: RememesRefreshMetadataLoopOOMFilter
      Properties:
        AlarmName: !Sub "${AWS::StackName}-rememesRefreshMetadataLoop-OOM"
        AlarmDescription: !Sub "Lambda rememesRefreshMetadataLoop OutOfMemory in ${AWS::Region}"
        Namespace: "Lambda/OOM"
        MetricName: "rememesRefreshMetadataLoop_OOMErrorCount"
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        TreatMissingData: notBreaching
        AlarmActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}
        OKActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}

    RememesFileLoopOOMFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: /aws/lambda/rememesFileLoop
        FilterPattern: "Runtime.OutOfMemory"
        MetricTransformations:
          - MetricNamespace: "Lambda/OOM"
            MetricName: "rememesFileLoop_OOMErrorCount"
            MetricValue: "1"
            DefaultValue: 0

    RememesFileLoopOOMAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: RememesFileLoopOOMFilter
      Properties:
        AlarmName: !Sub "${AWS::StackName}-rememesFileLoop-OOM"
        AlarmDescription: !Sub "Lambda rememesFileLoop OutOfMemory in ${AWS::Region}"
        Namespace: "Lambda/OOM"
        MetricName: "rememesFileLoop_OOMErrorCount"
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        TreatMissingData: notBreaching
        AlarmActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}
        OKActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}