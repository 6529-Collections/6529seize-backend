service: teamLoop

package:
  artifact: dist/index.zip

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1028
  timeout: 900
  architecture: arm64

functions:
  teamLoop:
    handler: index.handler
    name: teamLoop
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: "teamLoop_${opt:stage, self:provider.stage}"
      
resources:
  Resources:
    TeamLoopOOMFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: /aws/lambda/teamLoop
        FilterPattern: "Runtime.OutOfMemory"
        MetricTransformations:
          - MetricNamespace: "Lambda/OOM"
            MetricName: "teamLoop_OOMErrorCount"
            MetricValue: "1"
            DefaultValue: 0

    TeamLoopOOMAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: TeamLoopOOMFilter
      Properties:
        AlarmName: !Sub "${AWS::StackName}-teamLoop-OOM"
        AlarmDescription: !Sub "Lambda teamLoop OutOfMemory in ${AWS::Region}"
        Namespace: "Lambda/OOM"
        MetricName: "teamLoop_OOMErrorCount"
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        TreatMissingData: notBreaching
        AlarmActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}
        OKActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}