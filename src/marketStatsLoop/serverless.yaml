service: marketStatsLoop

package:
  artifact: dist/index.zip

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 512
  timeout: 900

functions:
  marketStatsMEMES:
    handler: index.handler
    name: marketStatsMEMES
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(10 minutes)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      CONTRACT: '0x33FD426905F149f8376e227d0C9D3340AaD17aF1'
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'marketStatsMEMES_${opt:stage, self:provider.stage}'
  marketStatsLAB:
    handler: index.handler
    name: marketStatsLAB
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(15 minutes)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      CONTRACT: '0x4db52a61dc491e15a2f78f5ac001c14ffe3568cb'
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'marketStatsLAB_${opt:stage, self:provider.stage}'
  marketStatsGRADIENT:
    handler: index.handler
    name: marketStatsGRADIENT
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(30 minutes)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      CONTRACT: '0x0c58ef43ff3032005e472cb5709f8908acb00205'
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'marketStatsGRADIENT_${opt:stage, self:provider.stage}'
  marketStatsNEXTGEN:
    handler: index.handler
    name: marketStatsNEXTGEN
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 1
    events:
      - schedule: rate(30 minutes)
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      CONTRACT: 'NEXTGEN'
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'marketStatsNEXTGEN_${opt:stage, self:provider.stage}'

resources:
  Resources:
    MarketStatsLoopOOMFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: /aws/lambda/marketStatsLoop
        FilterPattern: "Runtime.OutOfMemory"
        MetricTransformations:
          - MetricNamespace: "Lambda/OOM"
            MetricName: "marketStatsLoop_OOMErrorCount"
            MetricValue: "1"
            DefaultValue: 0

    MarketStatsLoopOOMAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: MarketStatsLoopOOMFilter
      Properties:
        AlarmName: !Sub "${AWS::StackName}-marketStatsLoop-OOM"
        AlarmDescription: !Sub "Lambda marketStatsLoop OutOfMemory in ${AWS::Region}"
        Namespace: "Lambda/OOM"
        MetricName: "marketStatsLoop_OOMErrorCount"
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        TreatMissingData: notBreaching
        AlarmActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}
        OKActions:
          - ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):cwtopic}