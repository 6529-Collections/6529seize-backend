service: pushNotificationsHandler

package:
  artifact: dist/index.zip

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 60

functions:
  pushNotificationsHandler:
    handler: index.handler
    name: pushNotificationsHandler
    description: ${env:VERSION_DESCRIPTION}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    reservedConcurrency: 20
    events:
      - sqs:
          arn:
            Fn::GetAtt: [FirebasePushNotificationsQueue, Arn]
          batchSize: 1
    vpc:
      securityGroupIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):security}
      subnetIds: ${file(../../serverless-config/${opt:stage, self:provider.stage}/vpc.js):subnets}
    environment:
      SENTRY_DSN: ${env:SENTRY_DSN}
      SENTRY_ENVIRONMENT: 'pushNotificationsHandler_${opt:stage, self:provider.stage}'

resources:
  Resources:
    FirebasePushNotificationsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: firebase-push-notifications
        VisibilityTimeout: 120
        DelaySeconds: 2
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt: [FirebasePushNotificationsDLQ, Arn]
          maxReceiveCount: 5

    FirebasePushNotificationsDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: firebase-push-notifications-dlq
